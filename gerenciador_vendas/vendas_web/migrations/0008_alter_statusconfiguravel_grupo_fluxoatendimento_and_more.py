# Generated by Django 5.2.4 on 2025-08-21 16:50

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('vendas_web', '0007_alter_historicocontato_status_and_more'),
    ]

    operations = [
        migrations.AlterField(
            model_name='statusconfiguravel',
            name='grupo',
            field=models.CharField(choices=[('lead_status_api', 'Lead: Status API'), ('prospecto_status', 'Prospecto: Status'), ('historico_status', 'Histórico: Status'), ('atendimento_status', 'Atendimento: Status'), ('fluxo_status', 'Fluxo: Status')], db_index=True, max_length=50),
        ),
        migrations.CreateModel(
            name='FluxoAtendimento',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(help_text='Nome identificador do fluxo de atendimento', max_length=255, verbose_name='Nome do Fluxo')),
                ('descricao', models.TextField(blank=True, help_text='Descrição detalhada do fluxo', null=True, verbose_name='Descrição')),
                ('tipo_fluxo', models.CharField(choices=[('qualificacao', 'Qualificação de Lead'), ('vendas', 'Vendas'), ('suporte', 'Suporte'), ('onboarding', 'Onboarding'), ('pesquisa', 'Pesquisa de Satisfação'), ('customizado', 'Customizado')], default='qualificacao', max_length=20, verbose_name='Tipo de Fluxo')),
                ('status', models.CharField(choices=[('ativo', 'Ativo'), ('inativo', 'Inativo'), ('rascunho', 'Rascunho'), ('teste', 'Em Teste')], default='rascunho', max_length=20, verbose_name='Status')),
                ('max_tentativas', models.PositiveIntegerField(default=3, help_text='Número máximo de tentativas para completar o fluxo', verbose_name='Máximo de Tentativas')),
                ('tempo_limite_minutos', models.PositiveIntegerField(blank=True, help_text='Tempo máximo para completar o fluxo (opcional)', null=True, verbose_name='Tempo Limite (minutos)')),
                ('permite_pular_questoes', models.BooleanField(default=False, help_text='Se o usuário pode pular questões opcionais', verbose_name='Permite Pular Questões')),
                ('data_criacao', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Data de Criação')),
                ('data_atualizacao', models.DateTimeField(auto_now=True, verbose_name='Data de Atualização')),
                ('criado_por', models.CharField(blank=True, max_length=100, null=True, verbose_name='Criado Por')),
                ('ativo', models.BooleanField(default=True, verbose_name='Ativo')),
            ],
            options={
                'verbose_name': 'Fluxo de Atendimento',
                'verbose_name_plural': 'Fluxos de Atendimento',
                'db_table': 'fluxos_atendimento',
                'ordering': ['-data_criacao'],
                'indexes': [models.Index(fields=['tipo_fluxo'], name='fluxos_aten_tipo_fl_5b8c0b_idx'), models.Index(fields=['status'], name='fluxos_aten_status_caafd0_idx'), models.Index(fields=['ativo'], name='fluxos_aten_ativo_ce32a4_idx')],
            },
        ),
        migrations.CreateModel(
            name='AtendimentoFluxo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('iniciado', 'Iniciado'), ('em_andamento', 'Em Andamento'), ('pausado', 'Pausado'), ('completado', 'Completado'), ('abandonado', 'Abandonado'), ('erro', 'Erro'), ('cancelado', 'Cancelado'), ('aguardando_validacao', 'Aguardando Validação'), ('validado', 'Validado'), ('rejeitado', 'Rejeitado')], default='iniciado', max_length=30, verbose_name='Status')),
                ('questao_atual', models.PositiveIntegerField(default=1, help_text='Índice da questão atual no fluxo', verbose_name='Questão Atual')),
                ('total_questoes', models.PositiveIntegerField(help_text='Total de questões no fluxo', verbose_name='Total de Questões')),
                ('questoes_respondidas', models.PositiveIntegerField(default=0, verbose_name='Questões Respondidas')),
                ('data_inicio', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Data de Início')),
                ('data_ultima_atividade', models.DateTimeField(auto_now=True, verbose_name='Data da Última Atividade')),
                ('data_conclusao', models.DateTimeField(blank=True, null=True, verbose_name='Data de Conclusão')),
                ('tempo_total', models.PositiveIntegerField(blank=True, help_text='Tempo total para completar o fluxo', null=True, verbose_name='Tempo Total (segundos)')),
                ('tentativas_atual', models.PositiveIntegerField(default=0, verbose_name='Tentativas Atuais')),
                ('max_tentativas', models.PositiveIntegerField(default=3, verbose_name='Máximo de Tentativas')),
                ('dados_respostas', models.JSONField(default=dict, help_text='JSON com todas as respostas do usuário', verbose_name='Dados das Respostas')),
                ('observacoes', models.TextField(blank=True, help_text='Observações sobre o atendimento', null=True, verbose_name='Observações')),
                ('ip_origem', models.GenericIPAddressField(blank=True, null=True, verbose_name='IP de Origem')),
                ('user_agent', models.TextField(blank=True, null=True, verbose_name='User Agent')),
                ('dispositivo', models.CharField(blank=True, help_text='Tipo de dispositivo usado', max_length=100, null=True, verbose_name='Dispositivo')),
                ('id_externo', models.CharField(blank=True, help_text='ID em sistema externo (ex: Hubsoft)', max_length=100, null=True, verbose_name='ID Externo')),
                ('resultado_final', models.JSONField(blank=True, help_text='Resultado processado do atendimento', null=True, verbose_name='Resultado Final')),
                ('score_qualificacao', models.IntegerField(blank=True, help_text='Score calculado baseado nas respostas', null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(10)], verbose_name='Score de Qualificação')),
                ('historico_contato', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='atendimentos_fluxo', to='vendas_web.historicocontato', verbose_name='Histórico de Contato')),
                ('lead', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='atendimentos_fluxo', to='vendas_web.leadprospecto', verbose_name='Lead/Prospecto')),
                ('fluxo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='atendimentos', to='vendas_web.fluxoatendimento', verbose_name='Fluxo')),
            ],
            options={
                'verbose_name': 'Atendimento de Fluxo',
                'verbose_name_plural': 'Atendimentos de Fluxo',
                'db_table': 'atendimentos_fluxo',
                'ordering': ['-data_inicio'],
            },
        ),
        migrations.CreateModel(
            name='QuestaoFluxo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('indice', models.PositiveIntegerField(help_text='Ordem da questão no fluxo (1, 2, 3...)', verbose_name='Índice')),
                ('titulo', models.CharField(help_text='Texto da pergunta para o usuário', max_length=255, verbose_name='Título da Questão')),
                ('descricao', models.TextField(blank=True, help_text='Descrição adicional ou instruções', null=True, verbose_name='Descrição')),
                ('tipo_questao', models.CharField(choices=[('texto', 'Texto Livre'), ('numero', 'Número'), ('email', 'Email'), ('telefone', 'Telefone'), ('cpf_cnpj', 'CPF/CNPJ'), ('cep', 'CEP'), ('endereco', 'Endereço'), ('select', 'Seleção Única'), ('multiselect', 'Seleção Múltipla'), ('data', 'Data'), ('hora', 'Hora'), ('data_hora', 'Data e Hora'), ('boolean', 'Sim/Não'), ('escala', 'Escala (1-10)'), ('arquivo', 'Upload de Arquivo')], default='texto', max_length=20, verbose_name='Tipo de Questão')),
                ('tipo_validacao', models.CharField(choices=[('obrigatoria', 'Obrigatória'), ('opcional', 'Opcional'), ('condicional', 'Condicional')], default='obrigatoria', max_length=20, verbose_name='Tipo de Validação')),
                ('opcoes_resposta', models.JSONField(blank=True, help_text='Lista de opções para questões de seleção', null=True, verbose_name='Opções de Resposta')),
                ('resposta_padrao', models.TextField(blank=True, help_text='Resposta padrão ou placeholder', null=True, verbose_name='Resposta Padrão')),
                ('regex_validacao', models.CharField(blank=True, help_text='Expressão regular para validação customizada', max_length=500, null=True, verbose_name='Regex de Validação')),
                ('tamanho_minimo', models.PositiveIntegerField(blank=True, help_text='Tamanho mínimo da resposta', null=True, verbose_name='Tamanho Mínimo')),
                ('tamanho_maximo', models.PositiveIntegerField(blank=True, help_text='Tamanho máximo da resposta', null=True, verbose_name='Tamanho Máximo')),
                ('valor_minimo', models.DecimalField(blank=True, decimal_places=2, help_text='Valor mínimo para questões numéricas', max_digits=15, null=True, verbose_name='Valor Mínimo')),
                ('valor_maximo', models.DecimalField(blank=True, decimal_places=2, help_text='Valor máximo para questões numéricas', max_digits=15, null=True, verbose_name='Valor Máximo')),
                ('valor_dependencia', models.TextField(blank=True, help_text='Valor específico da questão de dependência para mostrar esta', null=True, verbose_name='Valor de Dependência')),
                ('ativo', models.BooleanField(default=True, verbose_name='Ativa')),
                ('permite_voltar', models.BooleanField(default=True, help_text='Se o usuário pode voltar para esta questão', verbose_name='Permite Voltar')),
                ('permite_editar', models.BooleanField(default=True, help_text='Se a resposta pode ser editada após enviada', verbose_name='Permite Editar')),
                ('ordem_exibicao', models.PositiveIntegerField(default=0, help_text='Ordem para exibição na interface', verbose_name='Ordem de Exibição')),
                ('fluxo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='questoes', to='vendas_web.fluxoatendimento', verbose_name='Fluxo')),
                ('questao_dependencia', models.ForeignKey(blank=True, help_text='Questão que deve ser respondida antes desta', null=True, on_delete=django.db.models.deletion.SET_NULL, to='vendas_web.questaofluxo', verbose_name='Questão de Dependência')),
            ],
            options={
                'verbose_name': 'Questão do Fluxo',
                'verbose_name_plural': 'Questões do Fluxo',
                'db_table': 'questoes_fluxo',
                'ordering': ['fluxo', 'indice'],
            },
        ),
        migrations.CreateModel(
            name='RespostaQuestao',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('resposta', models.TextField(verbose_name='Resposta')),
                ('resposta_processada', models.JSONField(blank=True, help_text='Resposta processada/validada em formato estruturado', null=True, verbose_name='Resposta Processada')),
                ('valida', models.BooleanField(default=True, verbose_name='Válida')),
                ('mensagem_erro', models.TextField(blank=True, null=True, verbose_name='Mensagem de Erro')),
                ('tentativas', models.PositiveIntegerField(default=1, verbose_name='Tentativas')),
                ('data_resposta', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Data da Resposta')),
                ('tempo_resposta', models.PositiveIntegerField(blank=True, help_text='Tempo para responder esta questão', null=True, verbose_name='Tempo de Resposta (segundos)')),
                ('ip_origem', models.GenericIPAddressField(blank=True, null=True, verbose_name='IP de Origem')),
                ('user_agent', models.TextField(blank=True, null=True, verbose_name='User Agent')),
                ('dados_extras', models.JSONField(blank=True, help_text='Dados adicionais sobre a resposta', null=True, verbose_name='Dados Extras')),
                ('atendimento', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='respostas_detalhadas', to='vendas_web.atendimentofluxo', verbose_name='Atendimento')),
                ('questao', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='respostas', to='vendas_web.questaofluxo', verbose_name='Questão')),
            ],
            options={
                'verbose_name': 'Resposta de Questão',
                'verbose_name_plural': 'Respostas de Questões',
                'db_table': 'respostas_questao',
                'ordering': ['atendimento', 'questao', '-data_resposta'],
            },
        ),
        migrations.AddIndex(
            model_name='atendimentofluxo',
            index=models.Index(fields=['lead'], name='atendimento_lead_id_393eb1_idx'),
        ),
        migrations.AddIndex(
            model_name='atendimentofluxo',
            index=models.Index(fields=['fluxo'], name='atendimento_fluxo_i_87c67a_idx'),
        ),
        migrations.AddIndex(
            model_name='atendimentofluxo',
            index=models.Index(fields=['status'], name='atendimento_status_e0935a_idx'),
        ),
        migrations.AddIndex(
            model_name='atendimentofluxo',
            index=models.Index(fields=['data_inicio'], name='atendimento_data_in_94bdf5_idx'),
        ),
        migrations.AddIndex(
            model_name='atendimentofluxo',
            index=models.Index(fields=['questao_atual'], name='atendimento_questao_9035e4_idx'),
        ),
        migrations.AddIndex(
            model_name='atendimentofluxo',
            index=models.Index(fields=['id_externo'], name='atendimento_id_exte_9912c3_idx'),
        ),
        migrations.AddIndex(
            model_name='atendimentofluxo',
            index=models.Index(fields=['lead', 'status'], name='atendimento_lead_id_5f6886_idx'),
        ),
        migrations.AddIndex(
            model_name='atendimentofluxo',
            index=models.Index(fields=['fluxo', 'status'], name='atendimento_fluxo_i_26934b_idx'),
        ),
        migrations.AddIndex(
            model_name='atendimentofluxo',
            index=models.Index(fields=['data_inicio', 'status'], name='atendimento_data_in_993b3c_idx'),
        ),
        migrations.AddIndex(
            model_name='questaofluxo',
            index=models.Index(fields=['fluxo', 'indice'], name='questoes_fl_fluxo_i_b10554_idx'),
        ),
        migrations.AddIndex(
            model_name='questaofluxo',
            index=models.Index(fields=['tipo_questao'], name='questoes_fl_tipo_qu_cf0996_idx'),
        ),
        migrations.AddIndex(
            model_name='questaofluxo',
            index=models.Index(fields=['ativo'], name='questoes_fl_ativo_1f73dc_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='questaofluxo',
            unique_together={('fluxo', 'indice')},
        ),
        migrations.AddIndex(
            model_name='respostaquestao',
            index=models.Index(fields=['atendimento', 'questao'], name='respostas_q_atendim_ab85d0_idx'),
        ),
        migrations.AddIndex(
            model_name='respostaquestao',
            index=models.Index(fields=['data_resposta'], name='respostas_q_data_re_19b0f8_idx'),
        ),
        migrations.AddIndex(
            model_name='respostaquestao',
            index=models.Index(fields=['valida'], name='respostas_q_valida_3a6321_idx'),
        ),
    ]
